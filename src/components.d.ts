/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface DateRangePicker {
    'calendarStart'?: string;
    'disablePast'?: boolean;
    'hideOutsiders'?: boolean;
    'initialEndDate'?: string;
    'initialStartDate'?: string;
    'numberOfCalendars': number;
    'startOnSundays'?: boolean;
  }
  interface DateRangePickerAttributes extends StencilHTMLAttributes {
    'calendarStart'?: string;
    'disablePast'?: boolean;
    'hideOutsiders'?: boolean;
    'initialEndDate'?: string;
    'initialStartDate'?: string;
    'numberOfCalendars'?: number;
    'onInput'?: (event: CustomEvent) => void;
    'startOnSundays'?: boolean;
  }

  interface DayBlock {
    'date': string;
    'isMaybeRange': boolean;
    'isMaybeStart': boolean;
    'isSelectedBetweenRange': boolean;
    'isSelectedEndRange': boolean;
    'outsideActiveMonth': boolean;
    'shouldDisable': boolean;
    'shouldHide': boolean;
  }
  interface DayBlockAttributes extends StencilHTMLAttributes {
    'date'?: string;
    'isMaybeRange'?: boolean;
    'isMaybeStart'?: boolean;
    'isSelectedBetweenRange'?: boolean;
    'isSelectedEndRange'?: boolean;
    'onClickDate'?: (event: CustomEvent) => void;
    'onMouseLeaveDate'?: (event: CustomEvent) => void;
    'onMouseOverDate'?: (event: CustomEvent) => void;
    'outsideActiveMonth'?: boolean;
    'shouldDisable'?: boolean;
    'shouldHide'?: boolean;
  }

  interface DateRangePickerInputElm {
    'fromDate'?: Date;
    'toDate'?: Date;
  }
  interface DateRangePickerInputElmAttributes extends StencilHTMLAttributes {
    'fromDate'?: Date;
    'toDate'?: Date;
  }

  interface DateRangePickerInputElmSelection {
    'date'?: Date;
    'placeholder': string;
  }
  interface DateRangePickerInputElmSelectionAttributes extends StencilHTMLAttributes {
    'date'?: Date;
    'placeholder'?: string;
  }

  interface MonthCalendar {
    'activeMonth': string;
    'disablePast': boolean;
    'endDate'?: Date;
    'hideOutsiders': boolean;
    'maybeEndDate'?: string;
    'maybeStartDate': string;
    'startDate'?: Date;
    'startOnSundays': boolean;
  }
  interface MonthCalendarAttributes extends StencilHTMLAttributes {
    'activeMonth'?: string;
    'disablePast'?: boolean;
    'endDate'?: Date;
    'hideOutsiders'?: boolean;
    'maybeEndDate'?: string;
    'maybeStartDate'?: string;
    'startDate'?: Date;
    'startOnSundays'?: boolean;
  }

  interface DateRangePickerPopup {
    'calendarStart'?: string;
    'disablePast'?: boolean;
    'hideOutsiders'?: boolean;
    'initialActiveMonth': Date;
    'initialEndDate'?: string;
    'initialStartDate'?: string;
    'isOpen'?: boolean;
    'numberOfCalendars': number;
    'startOnSundays'?: boolean;
  }
  interface DateRangePickerPopupAttributes extends StencilHTMLAttributes {
    'calendarStart'?: string;
    'disablePast'?: boolean;
    'hideOutsiders'?: boolean;
    'initialActiveMonth'?: Date;
    'initialEndDate'?: string;
    'initialStartDate'?: string;
    'isOpen'?: boolean;
    'numberOfCalendars'?: number;
    'onEndDateSet'?: (event: CustomEvent) => void;
    'onInput'?: (event: CustomEvent) => void;
    'onStartDateSet'?: (event: CustomEvent) => void;
    'startOnSundays'?: boolean;
  }

  interface RangeNavigation {}
  interface RangeNavigationAttributes extends StencilHTMLAttributes {
    'onNextMonth'?: (event: CustomEvent) => void;
    'onPreviousMonth'?: (event: CustomEvent) => void;
  }
}

declare global {
  interface StencilElementInterfaces {
    'DateRangePicker': Components.DateRangePicker;
    'DayBlock': Components.DayBlock;
    'DateRangePickerInputElm': Components.DateRangePickerInputElm;
    'DateRangePickerInputElmSelection': Components.DateRangePickerInputElmSelection;
    'MonthCalendar': Components.MonthCalendar;
    'DateRangePickerPopup': Components.DateRangePickerPopup;
    'RangeNavigation': Components.RangeNavigation;
  }

  interface StencilIntrinsicElements {
    'date-range-picker': Components.DateRangePickerAttributes;
    'day-block': Components.DayBlockAttributes;
    'date-range-picker-input-elm': Components.DateRangePickerInputElmAttributes;
    'date-range-picker-input-elm-selection': Components.DateRangePickerInputElmSelectionAttributes;
    'month-calendar': Components.MonthCalendarAttributes;
    'date-range-picker-popup': Components.DateRangePickerPopupAttributes;
    'range-navigation': Components.RangeNavigationAttributes;
  }


  interface HTMLDateRangePickerElement extends Components.DateRangePicker, HTMLStencilElement {}
  var HTMLDateRangePickerElement: {
    prototype: HTMLDateRangePickerElement;
    new (): HTMLDateRangePickerElement;
  };

  interface HTMLDayBlockElement extends Components.DayBlock, HTMLStencilElement {}
  var HTMLDayBlockElement: {
    prototype: HTMLDayBlockElement;
    new (): HTMLDayBlockElement;
  };

  interface HTMLDateRangePickerInputElmElement extends Components.DateRangePickerInputElm, HTMLStencilElement {}
  var HTMLDateRangePickerInputElmElement: {
    prototype: HTMLDateRangePickerInputElmElement;
    new (): HTMLDateRangePickerInputElmElement;
  };

  interface HTMLDateRangePickerInputElmSelectionElement extends Components.DateRangePickerInputElmSelection, HTMLStencilElement {}
  var HTMLDateRangePickerInputElmSelectionElement: {
    prototype: HTMLDateRangePickerInputElmSelectionElement;
    new (): HTMLDateRangePickerInputElmSelectionElement;
  };

  interface HTMLMonthCalendarElement extends Components.MonthCalendar, HTMLStencilElement {}
  var HTMLMonthCalendarElement: {
    prototype: HTMLMonthCalendarElement;
    new (): HTMLMonthCalendarElement;
  };

  interface HTMLDateRangePickerPopupElement extends Components.DateRangePickerPopup, HTMLStencilElement {}
  var HTMLDateRangePickerPopupElement: {
    prototype: HTMLDateRangePickerPopupElement;
    new (): HTMLDateRangePickerPopupElement;
  };

  interface HTMLRangeNavigationElement extends Components.RangeNavigation, HTMLStencilElement {}
  var HTMLRangeNavigationElement: {
    prototype: HTMLRangeNavigationElement;
    new (): HTMLRangeNavigationElement;
  };

  interface HTMLElementTagNameMap {
    'date-range-picker': HTMLDateRangePickerElement
    'day-block': HTMLDayBlockElement
    'date-range-picker-input-elm': HTMLDateRangePickerInputElmElement
    'date-range-picker-input-elm-selection': HTMLDateRangePickerInputElmSelectionElement
    'month-calendar': HTMLMonthCalendarElement
    'date-range-picker-popup': HTMLDateRangePickerPopupElement
    'range-navigation': HTMLRangeNavigationElement
  }

  interface ElementTagNameMap {
    'date-range-picker': HTMLDateRangePickerElement;
    'day-block': HTMLDayBlockElement;
    'date-range-picker-input-elm': HTMLDateRangePickerInputElmElement;
    'date-range-picker-input-elm-selection': HTMLDateRangePickerInputElmSelectionElement;
    'month-calendar': HTMLMonthCalendarElement;
    'date-range-picker-popup': HTMLDateRangePickerPopupElement;
    'range-navigation': HTMLRangeNavigationElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
